{"version":3,"sources":["generators/onPremWebpart/index.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAM7B,gDAAgD;AAEhD,qEAAqE;AAMrE,kCAAkC;AAClC,qBAA4B,IAA6B,EAAE,OAAwB;IACjF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC;AAFD,kCAEC;AAED,kCAAkC;AAClC,uBAA8B,SAAkC;IAC9D,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACpD,CAAC;AAFD,sCAEC;AAED,sBAA8B,SAAQ,aAAa,CAAC,sBAAwD;IAsD1G,kCAAkC;IAClC,YAAsB,IAAuB,EAAE,OAAY;QACzD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAvDJ,iBAAY,GAAW,oBAAoB,CAAC;QAC5C,aAAQ,GAAW,SAAS,CAAC;QAC7B,sBAAiB,GAA0B,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACjE,eAAU,GAAW,UAAU,CAAC;QAqDjD,aAAa,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IApDM,YAAY,KAAuB,CAAC;IAEpC,SAAS;QACd,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAC3B,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACjE,CAAC;QAED,IAAI,CAAC;YACH,oCAAoC;YACpC,IAAI,CAAC,UAAU,CAAC,QAAQ,CACtB;gBACE,UAAU,EAAE,CAAC;wBACX,UAAU,EAAE,kBAAmB,IAAI,CAAC,OAAO,CAAC,sBAAuB,IAAK,IAAI,CAAC,OAAO,CAAC,aAAc,YAAY;wBAC/G,QAAQ,EAAE,kBAAmB,IAAI,CAAC,OAAO,CAAC,sBAAuB,IAAK,IAAI,CAAC,OAAO,CAAC,aAAc,uBAAuB;qBACzH,CAAC;aACH,EACD,IAAI,CAAC,OAAO,CAAC,2BAA2B,CACzC,CAAC;YACF,mCAAmC;QACrC,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,kDAAkD;YAClD,IAAI,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,YAAY,uBAAuB,CAAC,CAAC;YACxE,MAAM,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAClC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAC7B,GAAG,IAAI,CAAC,UAAU,IAAK,IAAI,CAAC,OAAO,CAAC,sBAAuB,kBAAkB,CAAC,CAAC;QACjF,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;IACpC,CAAC;IAEM,OAAO;QACZ,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAEM,OAAO;QACZ,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEM,GAAG,KAAsB,CAAC;CAOlC;AA3DD,4CA2DC;AAED,4EAA4E;AAC5E,kEAAkE;AAClE,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC;AAClC,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AAC7C,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC","file":"generators/onPremWebpart/index.js","sourcesContent":["import * as path from 'path';\r\n\r\nimport {\r\n  BaseGenerator,\r\n  AvailableFrameworks\r\n} from '../../common/BaseGenerator';\r\nimport * as Utils from '../../common/utilities';\r\n\r\nimport * as BaseComponent from '../component/BaseComponentGenerator';\r\n\r\nexport interface IWebpartOptions extends BaseComponent.IBaseComponentOptions {}\r\n\r\nexport interface IWebpartContext extends BaseComponent.IBaseComponentContext {}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function composeWith(base: BaseGenerator<any, any>, options: IWebpartOptions): void {\r\n  Utils.compose(path.basename(__dirname), base, options);\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function defineOptions(generator: BaseGenerator<any, any>): void {\r\n  BaseComponent.defineOptions(generator, 'WebPart');\r\n}\r\n\r\nexport class WebpartGenerator extends BaseComponent.BaseComponentGenerator<IWebpartOptions, IWebpartContext> {\r\n  protected readonly friendlyName: string = 'Web part (on-prem)';\r\n  protected readonly codeName: string = 'WebPart';\r\n  protected readonly allowedFrameworks: AvailableFrameworks[] = ['knockout', 'react'];\r\n  protected readonly folderName: string = 'webparts';\r\n\r\n  public initializing(): void { /* no-op */ }\r\n\r\n  public prompting(): Promise<void> {\r\n    return super.prompting();\r\n  }\r\n\r\n  public configuring(): void {\r\n    this.ensureDependencyGroup(this.context.framework);\r\n    this.ensureDependencyGroup('webpart');\r\n\r\n    if (!this.configJson.data) {\r\n      throw new Error(`Missing required file: \"config/config.json\"`);\r\n    }\r\n\r\n    try {\r\n      /* tslint:disable:max-line-length */\r\n      this.configJson.addEntry(\r\n        {\r\n          components: [{\r\n            entrypoint: `./lib/webparts/${ this.context.componentNameCamelCase }/${ this.context.componentName }WebPart.js`,\r\n            manifest: `./src/webparts/${ this.context.componentNameCamelCase }/${ this.context.componentName }WebPart.manifest.json`\r\n          }]\r\n        },\r\n        this.context.componentClassNameKebabCase\r\n      );\r\n      /* tslint:enable:max-line-length */\r\n    } catch (error) {\r\n      // @todo move this error to occur during prompting\r\n      this.log(`Cannot create two ${this.friendlyName}s with the same name.`);\r\n      throw error;\r\n    }\r\n\r\n    this.configJson.addLocalizedResource(\r\n      this.context.componentStrings,\r\n      `${this.folderName}/${ this.context.componentNameCamelCase }/loc/{locale}.js`);\r\n    this.serveJson.setUpForWebParts();\r\n  }\r\n\r\n  public writing(): void {\r\n    super.writing(true);\r\n  }\r\n\r\n  public install(): void {\r\n    super.install();\r\n  }\r\n\r\n  public end(): void { /* no-op */}\r\n\r\n  // tslint:disable-next-line:no-any\r\n  protected constructor(args: string | string[], options: any) {\r\n    super(args, options);\r\n    defineOptions(this);\r\n  }\r\n}\r\n\r\n// Yeoman expects exports of this type, which overrides the TS exports above\r\n// Ensure that anything marked as export above is also listed here\r\nmodule.exports = WebpartGenerator;\r\nmodule.exports.defineOptions = defineOptions;\r\nmodule.exports.composeWith = composeWith;\r\n"],"sourceRoot":"..\\..\\..\\src"}