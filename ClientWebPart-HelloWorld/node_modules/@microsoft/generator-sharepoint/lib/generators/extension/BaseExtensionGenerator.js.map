{"version":3,"sources":["generators/extension/BaseExtensionGenerator.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAC7B,gCAAgC;AAEhC,gDAAgD;AAEhD,qEAAqE;AAWrE,kCAAkC;AAClC,uBAA8B,SAAkC,EAAE,OAAe,WAAW;IAC1F,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC/C,CAAC;AAFD,sCAEC;AAED,4BAEE,SAAQ,aAAa,CAAC,sBAA0C;IAFlE;;QAGqB,eAAU,GAAW,YAAY,CAAC;IAqCvD,CAAC;IAnCQ,SAAS;QACd,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAC3B,CAAC;IAEM,WAAW;QAChB,KAAK,CAAC,WAAW,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;QACxC,EAAE,CAAC,CACD,CAAC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,EAAE;YACpD,CAAC,IAAI,CAAC,cAAc,EACtB,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAEM,OAAO,CAAC,aAAsB,IAAI;QACvC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1B,EAAE,CAAC,CACD,UAAU;YACV,CAAC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,EAAE;YACpD,CAAC,IAAI,CAAC,cAAc,EACtB,CAAC,CAAC,CAAC;YACD,MAAM,IAAI,GAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,CAAC,CAAC;YACrE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;IAEM,OAAO;QACZ,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEO,cAAc;QACpB,MAAM,eAAe,GAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;QAC1G,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC;CACF;AAxCD,wDAwCC","file":"generators/extension/BaseExtensionGenerator.js","sourcesContent":["import * as path from 'path';\r\nimport * as fsx from 'fs-extra';\r\n\r\nimport * as Utils from '../../common/utilities';\r\nimport { BaseGenerator } from '../../common/BaseGenerator';\r\nimport * as BaseComponent from '../component/BaseComponentGenerator';\r\n\r\nexport type AvailableExtensions =\r\n  // (alphabetical order)\r\n  | 'ApplicationCustomizer'\r\n  | 'FieldCustomizer'\r\n  | 'CommandSet';\r\n\r\nexport interface IBaseExtensionOptions extends BaseComponent.IBaseComponentOptions {}\r\nexport interface IBaseExtensionContext extends BaseComponent.IBaseComponentContext {}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function defineOptions(generator: BaseGenerator<any, any>, type: string = 'Extension'): void {\r\n  BaseComponent.defineOptions(generator, type);\r\n}\r\n\r\nexport abstract class\r\n  BaseExtensionGenerator<IOptions extends IBaseExtensionOptions, IContext extends IBaseExtensionContext>\r\n  extends BaseComponent.BaseComponentGenerator<IOptions, IContext> {\r\n  protected readonly folderName: string = 'extensions';\r\n\r\n  public prompting(): Promise<void> {\r\n    return super.prompting();\r\n  }\r\n\r\n  public configuring(): void {\r\n    super.configuring();\r\n    this.ensureDependencyGroup('extension');\r\n    if (\r\n      !this.packageSolutionJson.getSkipFeatureDeployment() &&\r\n      !this.hasElementsXml()\r\n    ) {\r\n      this.packageSolutionJson.addExtensionFeature(Utils.generateGuid());\r\n    }\r\n  }\r\n\r\n  public writing(shouldCopy: boolean = true): void {\r\n    super.writing(shouldCopy);\r\n    if (\r\n      shouldCopy &&\r\n      !this.packageSolutionJson.getSkipFeatureDeployment() &&\r\n      !this.hasElementsXml()\r\n    ) {\r\n      const dest: string = path.join(this.destinationRoot(), 'sharepoint');\r\n      this.copyTemplate(path.join(this.sourceRoot(), 'sharepoint'), dest);\r\n    }\r\n  }\r\n\r\n  public install(): void {\r\n    super.install();\r\n  }\r\n\r\n  private hasElementsXml(): boolean {\r\n    const elementsXmlPath: string = path.join(this.destinationRoot(), 'sharepoint', 'assets', 'elements.xml');\r\n    return fsx.existsSync(elementsXmlPath);\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}