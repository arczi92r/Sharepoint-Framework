{"version":3,"sources":["generators/solution/index.ts"],"names":[],"mappings":";AAAA,sCAAsC;;AAEtC,iCAAiC;AACjC,6BAA6B;AAE7B,gDAAgD;AAEhD,8DAGoC;AAEpC,0EAG0C;AAiB1C,kCAAkC;AAClC,qBAA4B,IAA6B,EAAE,OAAyB;IAClF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC;AAFD,kCAEC;AAED,kCAAkC;AAClC,uBAA8B,SAAkC;IAC9D,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE;QAC/B,WAAW,EAAE,uCAAuC;QACpD,IAAI,EAAE,MAAM;KACb,CAAC,CAAC;IACH,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;QAC5B,WAAW,EAAE,0DAA0D;QACvE,IAAI,EAAE,MAAM;KACb,CAAC,CAAC;IACH,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE;QAC9B,WAAW,EAAE,oEAAoE;QACjF,IAAI,EAAE,MAAM;KACb,CAAC,CAAC;IACH,SAAS,CAAC,QAAQ,CAAC,uBAAuB,EAAE;QAC1C,WAAW,EAAE,kEAAkE;YAClE,qEAAqE;YACrE,4CAA4C;QACzD,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,KAAK;QACf,2CAA2C;QAC3C,OAAO,EAAE,IAAI;KACP,CAAC,CAAC,CAAC,6BAA6B;AAC1C,CAAC;AAtBD,sCAsBC;AAED,uBAAwB,SAAQ,6BAAiD;IAoJ/E,qCAAqC;IACrC,YAAsB,IAAuB,EAAE,OAAY;QACzD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QArJb,0BAAqB,GAAY,IAAI,CAAC;QACtC,iBAAY,GAAW,UAAU,CAAC;QAqJ1C,aAAa,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IApJM,YAAY,KAAqB,CAAC;IAClC,SAAS;QACd,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACjB;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;gBACvC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY;gBACtC,OAAO,EAAE,6BAA6B;aACvC;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW;gBACrC,OAAO,EAAE,sEAAsE;gBAC/E,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE;oBACP,EAAE,IAAI,EAAE,iCAAiC,EAAE,KAAK,EAAE,KAAK,EAAE;oBACzD,EAAE,IAAI,EAAE,sDAAsD,EAAE,KAAK,EAAE,QAAQ,EAAC;iBACjF;aACF;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,aAAa;gBACnB,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY;gBACtC,OAAO,EAAE,uCAAuC;gBAChD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,wBAAwB;wBAC9B,KAAK,EAAE,SAAS;qBACjB;oBACD;wBACE,IAAI,EAAE,uCAAuC;wBAC7C,KAAK,EAAE,QAAQ;qBAChB;iBACF;aACF;SACF,CAAC,CAAC,IAAI,CAAC,CAAC,OAIR;YACC,wDAAwD;YACxD,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC;YAC9E,MAAM,eAAe,GAAY,OAAO,CAAC,WAAW,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;YACjG,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YACxE,CAAC;YAED,gFAAgF;YAChF,gFAAgF;YAChF,+EAA+E;YAC/E,8EAA8E;YAC9E,qCAAqC;YACrC,6CAA6C;YAC7C,yCAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAA6B,CAAC,CAAC;YAEzE,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACvE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YAE9C,uBAAuB;YACvB,yCAAmB,CAAC,OAAO,GAAG,6BAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC;YACzE,yCAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC3D,yCAAmB,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACvD,yCAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC;QAEpF,CAAC,CAAC,CAAC,IAAI,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACjB;oBACE,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,uBAAuB;oBAC7B,OAAO,EAAE,KAAK;oBACd,2CAA2C;oBAC3C,IAAI,EAAE,MAAM,yCAAmB,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,KAAK,IAAI;oBACvG,OAAO,EAAE,iEAAiE;wBAClE,kEAAkE;wBAClE,iDAAiD;iBAC1D;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAER;YACC,2CAA2C;YAC3C,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,KAAK,IAAI;gBAC9E,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,CAAC;YAErE,wDAAwD;YACxD,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,WAAW;QAChB,MAAM,mBAAmB,GAAgB,OAAO,CAAC,wBAAwB,CAAC,CAAC;QAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;QACrD,CAAC;QACD,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAEpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAC1C,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACpD,CAAC;QAED,wCAAwC;QACxC,EAAE,CAAC,CAAC,yCAAmB,CAAC,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjD,kCAAkC;YAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;gBAClB,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,kBAAkB,EAAE,EAAE;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;gBAClB,SAAS,EAAE,uEAAuE;gBAClF,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,kBAAkB,EAAE,EAAE;aACvB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEM,OAAO;QACZ,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAErB,MAAM,IAAI,GAAW,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,yCAAmB,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEM,GAAG,KAAsB,CAAC;CAOlC;AAED,4EAA4E;AAC5E,kEAAkE;AAClE,MAAM,CAAC,OAAO,GAAG,iBAAiB,CAAC;AACnC,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;AACzC,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC","file":"generators/solution/index.js","sourcesContent":["/// <reference types=\"package-json\" />\r\n\r\nimport * as lodash from 'lodash';\r\nimport * as path from 'path';\r\n\r\nimport * as Utils from '../../common/utilities';\r\n\r\nimport {\r\n  BaseGenerator,\r\n  IBaseOptions\r\n} from '../../common/BaseGenerator';\r\n\r\nimport {\r\n  YeomanConfiguration,\r\n  IYeomanConfigurationData\r\n} from '../../common/YeomanConfiguration';\r\n\r\nexport interface ISharedOptions {\r\n  solutionName: string;\r\n  skipFeatureDeployment: boolean;\r\n}\r\n\r\nexport interface ISolutionOptions extends IBaseOptions, ISharedOptions {\r\n  environment: 'spo' | 'onprem';\r\n}\r\n\r\nexport interface ISolutionContext extends ISharedOptions {\r\n  libraryName: string; /* note this is really solutionNameKebabCase */\r\n  libraryId: string;\r\n  environment: 'spo' | 'onprem';\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function composeWith(base: BaseGenerator<any, any>, options: ISolutionOptions): void {\r\n  Utils.compose(path.basename(__dirname), base, options);\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function defineOptions(generator: BaseGenerator<any, any>): void {\r\n  generator.option('solutionName', {\r\n    description: 'Solution name, as well as folder name',\r\n    type: String\r\n  });\r\n  generator.option('framework', {\r\n    description: 'Framework to use. Available: \"none\", \"react\", \"knockout\"',\r\n    type: String\r\n  });\r\n  generator.option('environment', {\r\n    description: 'The target environment for the solution. Either “onprem” or “spo”.',\r\n    type: String\r\n  });\r\n  generator.argument('skipFeatureDeployment', {\r\n    description: 'If specified, allow the tenant admin the choice of being able to' +\r\n                 'deploy the components to all sites immediately without running any ' +\r\n                 'feature deployment or adding apps in sites',\r\n    type: Boolean,\r\n    required: false,\r\n    // tslint:disable-next-line:no-null-keyword\r\n    default: null\r\n  } as any); // tslint:disable-line:no-any\r\n}\r\n\r\nclass SolutionGenerator extends BaseGenerator<ISolutionOptions, ISolutionContext> {\r\n  protected allowEmptyPackageJson: boolean = true;\r\n  protected friendlyName: string = 'Solution';\r\n\r\n  public initializing(): void {/* no-op */}\r\n  public prompting(): Promise<void> {\r\n    return this.prompt([\r\n      {\r\n        type: 'input',\r\n        name: 'solutionName',\r\n        default: lodash.kebabCase(this.appname),\r\n        when: () => !this.options.solutionName,\r\n        message: 'What is your solution name?'\r\n      },\r\n      {\r\n        type: 'list',\r\n        name: 'environment',\r\n        when: () => !this.options.environment,\r\n        message: 'Which baseline packages do you want to target for your component(s)?',\r\n        default: 'spo',\r\n        choices: [\r\n          { name: 'SharePoint Online only (latest)', value: 'spo' },\r\n          { name: 'SharePoint 2016 onwards, including SharePoint Online', value: 'onprem'}\r\n        ]\r\n      },\r\n      {\r\n        type: 'list',\r\n        name: 'whichFolder',\r\n        default: 'current',\r\n        when: () => !this.options.solutionName,\r\n        message: 'Where do you want to place the files?',\r\n        choices: [\r\n          {\r\n            name: 'Use the current folder',\r\n            value: 'current'\r\n          },\r\n          {\r\n            name: 'Create a subfolder with solution name',\r\n            value: 'subdir'\r\n          }\r\n        ]\r\n      }\r\n    ]).then((answers: {\r\n      solutionName: string;\r\n      environment: 'spo' | 'onprem';\r\n      whichFolder: 'subdir' | 'current';\r\n    }) => {\r\n      // Use a sub-dir if they pass solutionName in via option\r\n      this.context.solutionName = this.options.solutionName || answers.solutionName;\r\n      const shouldUseSubDir: boolean = answers.whichFolder === 'subdir' || !!this.options.solutionName;\r\n      if (shouldUseSubDir) {\r\n        this.destinationRoot(this.destinationPath(this.context.solutionName));\r\n      }\r\n\r\n      // Yeoman uses the destinationRoot at the time of instantiation when determining\r\n      // where to write the .yo-rc file, however we want to change the destinationRoot\r\n      // after. Once we change the destinationRoot, the base class instantiates a new\r\n      // storage object. We have a helper class using the storage object, so we need\r\n      // to reset it to use the new object.\r\n      // tslint:disable-next-line:no-string-literal\r\n      YeomanConfiguration.setStore(this['config'] as IYeomanConfigurationData);\r\n\r\n      this.context.libraryName = lodash.kebabCase(this.context.solutionName);\r\n      this.context.libraryId = Utils.generateGuid();\r\n\r\n      // store some variables\r\n      YeomanConfiguration.version = BaseGenerator.generatorPackageJson.version;\r\n      YeomanConfiguration.libraryName = this.context.libraryName;\r\n      YeomanConfiguration.libraryId = this.context.libraryId;\r\n      YeomanConfiguration.environment = this.options.environment || answers.environment;\r\n\r\n    }).then(() => {\r\n      return this.prompt([\r\n        {\r\n          type: 'confirm',\r\n          name: 'skipFeatureDeployment',\r\n          default: false,\r\n          // tslint:disable-next-line:no-null-keyword\r\n          when: () => YeomanConfiguration.environment !== 'onprem' && this.options.skipFeatureDeployment === null,\r\n          message: 'Do you want to allow the tenant admin the choice of being able ' +\r\n                  'to deploy the solution to all sites immediately without running ' +\r\n                  'any feature deployment or adding apps in sites?'\r\n        }\r\n      ]);\r\n    }).then((answers: {\r\n      skipFeatureDeployment: boolean;\r\n    }) => {\r\n      // tslint:disable-next-line:no-null-keyword\r\n      this.context.skipFeatureDeployment = this.options.skipFeatureDeployment !== null ?\r\n        this.options.skipFeatureDeployment : answers.skipFeatureDeployment;\r\n\r\n      // make sure we store the value of skipFeatureDeployment\r\n      this.packageSolutionJson.setUpSolution(this.context);\r\n    });\r\n  }\r\n\r\n  public configuring(): void {\r\n    const packageJsonTemplate: PackageJson = require('./initial.package.json');\r\n    if (this.packageJson.data) {\r\n      this.log(`Overwriting an existing \"package.json\"`);\r\n    }\r\n    packageJsonTemplate.name = this.context.libraryName;\r\n\r\n    this.packageJson.set(packageJsonTemplate);\r\n    this.ensureDependencyGroup('none');\r\n\r\n    if (this.configJson.data) {\r\n      this.log(`Overwriting an existing \"config.json\"`);\r\n    }\r\n\r\n    // SPFx OnPrem requires v1 config files.\r\n    if (YeomanConfiguration.environment === 'onprem') {\r\n      // tslint:disable-next-line:no-any\r\n      this.configJson.set({\r\n        entries: [],\r\n        externals: {},\r\n        localizedResources: {}\r\n      });\r\n      this.configJson.configJsonIsV1 = true;\r\n    } else {\r\n      this.configJson.set({\r\n        '$schema': 'https://dev.office.com/json-schemas/spfx-build/config.2.0.schema.json',\r\n        version: '2.0',\r\n        bundles: {},\r\n        externals: {},\r\n        localizedResources: {}\r\n      });\r\n    }\r\n  }\r\n\r\n  public writing(): void {\r\n    super.writing(false);\r\n\r\n    const dest: string = this.destinationRoot();\r\n    this.copyTemplate(path.join(this.sourceRoot(), YeomanConfiguration.environment), dest);\r\n    this.copyTemplate(path.join(this.sourceRoot(), 'base'), dest);\r\n\r\n    this.packageJson.save();\r\n    this.configJson.save();\r\n    this.packageSolutionJson.save();\r\n  }\r\n\r\n  public install(): void {\r\n    this.tryInstall();\r\n  }\r\n\r\n  public end(): void { /* no-op */}\r\n\r\n  /* tslint:disable-next-line:no-any */\r\n  protected constructor(args: string | string[], options: any) {\r\n    super(args, options);\r\n    defineOptions(this);\r\n  }\r\n}\r\n\r\n// Yeoman expects exports of this type, which overrides the TS exports above\r\n// Ensure that anything marked as export above is also listed here\r\nmodule.exports = SolutionGenerator;\r\nmodule.exports.composeWith = composeWith;\r\nmodule.exports.defineOptions = defineOptions;\r\n"],"sourceRoot":"..\\..\\..\\src"}