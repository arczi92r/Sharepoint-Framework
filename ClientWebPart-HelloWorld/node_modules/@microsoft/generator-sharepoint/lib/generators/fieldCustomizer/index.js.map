{"version":3,"sources":["generators/fieldCustomizer/index.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAM7B,gDAAgD;AAEhD,qEAAqE;AAOrE,kCAAkC;AAClC,qBAA4B,IAA6B,EAAE,OAAgC;IACzF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC;AAFD,kCAEC;AAED,kCAAkC;AAClC,uBAA8B,SAAkC;IAC9D,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;AAC7D,CAAC;AAFD,sCAEC;AAED,8BAAsC,SACpC,aAAa,CAAC,sBAAwE;IAuCtF,kCAAkC;IAClC,YAAsB,IAAuB,EAAE,OAAY;QACzD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAxCJ,iBAAY,GAAW,kBAAkB,CAAC;QAC1C,aAAQ,GAAW,iBAAiB,CAAC;QACrC,sBAAiB,GAA0B,CAAC,OAAO,CAAC,CAAC;QAuCtE,aAAa,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAtCM,YAAY,KAAuB,CAAC;IAEpC,SAAS;QACd,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAC3B,CAAC;IAEM,WAAW;QAChB,KAAK,CAAC,WAAW,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QAE5C,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;YACnE,OAAO,EAAE,mEAAmE;YAC5E,gBAAgB,EAAE;gBAChB,mBAAmB,EAAE;oBACnB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;oBAC5B,UAAU,EAAE;wBACV,UAAU,EAAE,OAAO;qBACpB;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAEM,OAAO;QACZ,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEM,OAAO;QACZ,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEM,GAAG,KAAsB,CAAC;CAOlC;AA7CD,4DA6CC;AAED,4EAA4E;AAC5E,kEAAkE;AAClE,MAAM,CAAC,OAAO,GAAG,wBAAwB,CAAC;AAC1C,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AAC7C,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC","file":"generators/fieldCustomizer/index.js","sourcesContent":["import * as path from 'path';\r\n\r\nimport {\r\n  BaseGenerator,\r\n  AvailableFrameworks\r\n} from '../../common/BaseGenerator';\r\nimport * as Utils from '../../common/utilities';\r\n\r\nimport * as BaseExtension from '../extension/BaseExtensionGenerator';\r\n\r\nexport interface IFieldCustomizerOptions extends BaseExtension.IBaseExtensionOptions {}\r\nexport interface IFieldCustomizerContext extends BaseExtension.IBaseExtensionContext {\r\n  fieldId: string;\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function composeWith(base: BaseGenerator<any, any>, options: IFieldCustomizerOptions): void {\r\n  Utils.compose(path.basename(__dirname), base, options);\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport function defineOptions(generator: BaseGenerator<any, any>): void {\r\n  BaseExtension.defineOptions(generator, 'Field Customizer');\r\n}\r\n\r\nexport class FieldCustomizerGenerator extends\r\n  BaseExtension.BaseExtensionGenerator<IFieldCustomizerOptions, IFieldCustomizerContext> {\r\n  protected readonly friendlyName: string = 'Field Customizer';\r\n  protected readonly codeName: string = 'FieldCustomizer';\r\n  protected readonly allowedFrameworks: AvailableFrameworks[] = ['react'];\r\n\r\n  public initializing(): void { /* no-op */ }\r\n\r\n  public prompting(): Promise<void> {\r\n    return super.prompting();\r\n  }\r\n\r\n  public configuring(): void {\r\n    super.configuring();\r\n    this.ensureDependencyGroup('fieldCustomizer');\r\n    this.context.fieldId = Utils.generateGuid();\r\n\r\n    this.serveJson.addConfiguration(this.context.componentNameCamelCase, {\r\n      pageUrl: 'https://contoso.sharepoint.com/sites/mySite/SitePages/myPage.aspx',\r\n      fieldCustomizers: {\r\n        'InternalFieldName': {\r\n          id: this.context.componentId,\r\n          properties: {\r\n            sampleText: 'Value'\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public writing(): void {\r\n    super.writing();\r\n  }\r\n\r\n  public install(): void {\r\n    super.install();\r\n  }\r\n\r\n  public end(): void { /* no-op */}\r\n\r\n  // tslint:disable-next-line:no-any\r\n  protected constructor(args: string | string[], options: any) {\r\n    super(args, options);\r\n    defineOptions(this);\r\n  }\r\n}\r\n\r\n// Yeoman expects exports of this type, which overrides the TS exports above\r\n// Ensure that anything marked as export above is also listed here\r\nmodule.exports = FieldCustomizerGenerator;\r\nmodule.exports.defineOptions = defineOptions;\r\nmodule.exports.composeWith = composeWith;\r\n"],"sourceRoot":"..\\..\\..\\src"}