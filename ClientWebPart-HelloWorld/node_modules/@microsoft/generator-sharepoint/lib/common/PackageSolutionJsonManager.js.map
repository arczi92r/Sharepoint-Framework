{"version":3,"sources":["common/PackageSolutionJsonManager.ts"],"names":[],"mappings":";;AAQA,+DAA4D;AAE5D,+CAA4C;AAE5C,gCAAwC,SAAQ,yBAA6B;IAGpE,MAAM,CAAC,IAAI,CAChB,QAAgB,EAChB,EAAsB;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACnF,CAAC;QAED,IAAI,IAAsB,CAAC;QAC3B,IAAI,CAAC;YACH,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,SAAS,CAAC;QACnB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,GAAG;gBACL,SAAS,EAAE,6EAA6E;aACzF,CAAC;QACJ,CAAC;QAED,0BAA0B,CAAC,SAAS,GAAG,IAAI,0BAA0B,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9F,CAAC;IAEM,MAAM,CAAC,KAAK;QACjB,0BAA0B,CAAC,SAAS,GAAG,SAAS,CAAC;IACnD,CAAC;IAEM,MAAM,KAAK,QAAQ;QACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,wBAAwB;QAC7B,IAAI,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC;QAClD,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAEM,aAAa,CAAC,eAAiC;QACpD,MAAM,IAAI,GAAqB,IAAI,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG;YACd,IAAI,EAAE,GAAG,eAAe,CAAC,WAAW,uBAAuB;YAC3D,EAAE,EAAE,eAAe,CAAC,SAAS;YAC7B,OAAO,EAAE,SAAS;SACnB,CAAC;QAEF,EAAE,CAAC,CAAC,yCAAmB,CAAC,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,uBAAuB,GAAG,IAAI,CAAC;QAC/C,CAAC;QAED,EAAE,CAAC,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,qBAAqB,GAAG,eAAe,CAAC,qBAAqB,CAAC;QAC9E,CAAC;QACD,IAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAE,YAAY,eAAe,CAAC,WAAW,QAAQ;SAC/D,CAAC;IACJ,CAAC;IAEM,mBAAmB,CAAC,SAAiB;QAC1C,MAAM,QAAQ,GAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE/C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,CAAC;QAED,MAAM,OAAO,GAAa;YACxB,KAAK,EAAE,sDAAsD;YAC7D,WAAW,EAAE,gEAAgE;YAC7E,EAAE,EAAE,SAAS;YACb,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE;gBACN,gBAAgB,EAAE;oBAChB,cAAc;iBACf;aACF;SACF,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;CACF;AAtFD,gEAsFC","file":"common/PackageSolutionJsonManager.js","sourcesContent":["import * as yeoman from 'yeoman-generator';\r\n\r\nimport {\r\n  IPackageSolution,\r\n  ISolution,\r\n  IFeature\r\n} from '@microsoft/sp-build-core-tasks';\r\n\r\nimport { YeomanConfiguration } from './YeomanConfiguration';\r\nimport { ISolutionContext } from '../generators/solution';\r\nimport { JsonManager } from './JsonManager';\r\n\r\nexport class PackageSolutionJsonManager extends JsonManager<IPackageSolution> {\r\n  private static _instance: PackageSolutionJsonManager;\r\n\r\n  public static load(\r\n    filepath: string,\r\n    fs: yeoman.MemFsEditor): void {\r\n      if (this._instance) {\r\n        throw new Error(`Cannot create a second instance of PackageSolutionJsonManager`);\r\n      }\r\n\r\n      let data: IPackageSolution;\r\n      try {\r\n        data = fs.readJSON(filepath);\r\n      } catch (error) {\r\n        data = undefined;\r\n      }\r\n\r\n      if (!data) {\r\n        data = {\r\n          '$schema': 'https://dev.office.com/json-schemas/spfx-build/package-solution.schema.json'\r\n        };\r\n      }\r\n\r\n      PackageSolutionJsonManager._instance = new PackageSolutionJsonManager(filepath, fs, data);\r\n  }\r\n\r\n  public static reset(): void {\r\n    PackageSolutionJsonManager._instance = undefined;\r\n  }\r\n\r\n  public static get instance(): PackageSolutionJsonManager {\r\n    return this._instance;\r\n  }\r\n\r\n  public getSkipFeatureDeployment(): boolean {\r\n    try {\r\n      return this.data.solution.skipFeatureDeployment;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public setUpSolution(solutionContext: ISolutionContext): void {\r\n    const data: IPackageSolution = this.data;\r\n    data.solution = {\r\n      name: `${solutionContext.libraryName}-client-side-solution`,\r\n      id: solutionContext.libraryId,\r\n      version: '1.0.0.0'\r\n    };\r\n\r\n    if (YeomanConfiguration.environment !== 'onprem') {\r\n      data.solution.includeClientSideAssets = true;\r\n    }\r\n\r\n    if (solutionContext.skipFeatureDeployment) {\r\n      data.solution.skipFeatureDeployment = solutionContext.skipFeatureDeployment;\r\n    }\r\n    data.paths = {\r\n      zippedPackage: `solution/${solutionContext.libraryName}.sppkg`\r\n    };\r\n  }\r\n\r\n  public addExtensionFeature(featureId: string): void {\r\n    const solution: ISolution = this.data.solution;\r\n\r\n    if (!solution) { // This should never happened as the solution has been set up\r\n      return;\r\n    }\r\n\r\n    if (!solution.features) {\r\n      solution.features = [];\r\n    }\r\n\r\n    const feature: IFeature = {\r\n      title: 'Application Extension - Deployment of custom action.',\r\n      description: 'Deploys a custom action with ClientSideComponentId association',\r\n      id: featureId,\r\n      version: '1.0.0.0',\r\n      assets: {\r\n        elementManifests: [\r\n          'elements.xml'\r\n        ]\r\n      }\r\n    };\r\n    solution.features.push(feature);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}