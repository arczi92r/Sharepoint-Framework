{"version":3,"sources":["common/PackageJsonManager.ts"],"names":[],"mappings":";;AAGA,+CAA4C;AAC5C,wBAAgC,SAAQ,yBAAwB;IAGvD,MAAM,CAAC,IAAI,CAChB,QAAgB,EAChB,EAAsB;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC3E,CAAC;QACD,IAAI,IAAiB,CAAC,CAAC,6BAA6B;QACpD,IAAI,CAAC;YACH,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,SAAS,CAAC;QACnB,CAAC;QACD,kBAAkB,CAAC,SAAS,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IAEM,MAAM,CAAC,KAAK;QACjB,kBAAkB,CAAC,SAAS,GAAG,SAAS,CAAC;IAC3C,CAAC;IAEM,MAAM,KAAK,QAAQ;QACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,aAAa,CAAC,UAAkB,EAAE,OAAe;QACtD,sCAAsC;QACtC,wBAAwB;QACxB,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACnD,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACrD,CAAC;QACD,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC;IACtE,CAAC;CACF;AAlCD,gDAkCC","file":"common/PackageJsonManager.js","sourcesContent":["/// <reference types=\"package-json\" />\r\nimport * as yeoman from 'yeoman-generator';\r\n\r\nimport { JsonManager } from './JsonManager';\r\nexport class PackageJsonManager extends JsonManager<PackageJson> {\r\n  private static _instance: PackageJsonManager; // tslint:disable-line:no-any\r\n\r\n  public static load(\r\n    filepath: string,\r\n    fs: yeoman.MemFsEditor): void {\r\n    if (this._instance) {\r\n      throw new Error(`Cannot create a second instance of PackageJsonManager`);\r\n    }\r\n    let data: PackageJson; // tslint:disable-line:no-any\r\n    try {\r\n      data = fs.readJSON(filepath);\r\n    } catch (error) {\r\n      data = undefined;\r\n    }\r\n    PackageJsonManager._instance = new PackageJsonManager(filepath, fs, data);\r\n  }\r\n\r\n  public static reset(): void {\r\n    PackageJsonManager._instance = undefined;\r\n  }\r\n\r\n  public static get instance(): PackageJsonManager {\r\n    return this._instance;\r\n  }\r\n\r\n  public addDependency(dependency: string, version: string): void {\r\n    // check that version is valid semver?\r\n    // resolve any conflicts\r\n    if (!PackageJsonManager.instance.data.dependencies) {\r\n      PackageJsonManager.instance.data.dependencies = {};\r\n    }\r\n    PackageJsonManager.instance.data.dependencies[dependency] = version;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}