{"version":3,"sources":["common/BaseGenerator.ts"],"names":[],"mappings":"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","file":"common/BaseGenerator.js","sourcesContent":["import * as path from 'path';\r\nimport * as UpdateNotifier from 'update-notifier';\r\nimport * as yeoman from 'yeoman-generator';\r\n\r\nimport * as Utils from './utilities';\r\nimport { PackageJsonManager } from './PackageJsonManager';\r\nimport { ConfigJsonManager } from './ConfigJsonManager';\r\nimport { ServeJsonManager } from './ServeJsonManager';\r\nimport { PackageSolutionJsonManager } from './PackageSolutionJsonManager';\r\nimport {\r\n  YeomanConfiguration,\r\n  IYeomanConfigurationData\r\n} from './YeomanConfiguration';\r\n\r\nexport type AvailableFrameworks = 'react' | 'none' | 'knockout';\r\n\r\nexport type DependencyGroups =\r\n  'react' | 'none' | 'knockout' | 'extension' | 'webpart' | 'applicationCustomizer' | 'fieldCustomizer' | 'commandSet';\r\n\r\nexport interface IBaseOptions {\r\n  'skip-install': boolean;\r\n}\r\n\r\nexport abstract class BaseGenerator<IOptions extends IBaseOptions, IContext> extends yeoman {\r\n  /* tslint:disable-next-line:no-any */\r\n  protected static generatorPackageJson: any = require('../../package.json');\r\n  private static _hasCheckedForUpdates: boolean = false;\r\n\r\n  /**\r\n   * The options property bag created by yeoman\r\n   */\r\n  public options: IOptions;\r\n\r\n  /**\r\n   * The context property bag used by templates\r\n   */\r\n  public context: IContext;\r\n\r\n  protected abstract friendlyName: string;\r\n  protected allowEmptyPackageJson: boolean = false;\r\n\r\n  protected get packageJson(): PackageJsonManager {\r\n    if (!PackageJsonManager.instance) {\r\n      PackageJsonManager.load(this.destinationPath('package.json'), this.fs);\r\n    }\r\n    if (!this.allowEmptyPackageJson && !PackageJsonManager.instance.data) {\r\n      throw new Error(`Cannot find \"package.json\" file required by this generator`);\r\n    }\r\n    return PackageJsonManager.instance;\r\n  }\r\n\r\n  protected get configJson(): ConfigJsonManager {\r\n    if (!ConfigJsonManager.instance) {\r\n      ConfigJsonManager.load(this.destinationPath('config/config.json'), this.fs);\r\n    }\r\n    return ConfigJsonManager.instance;\r\n  }\r\n\r\n  protected get serveJson(): ServeJsonManager {\r\n    if (!ServeJsonManager.instance) {\r\n      ServeJsonManager.load(this.destinationPath('config/serve.json'), this.fs);\r\n    }\r\n    return ServeJsonManager.instance;\r\n  }\r\n\r\n  protected get packageSolutionJson(): PackageSolutionJsonManager {\r\n    if (!PackageSolutionJsonManager.instance) {\r\n      PackageSolutionJsonManager.load(this.destinationPath('config/package-solution.json'), this.fs);\r\n    }\r\n    return PackageSolutionJsonManager.instance;\r\n  }\r\n\r\n  /* tslint:disable-next-line:no-any */\r\n  private _dependencyGroupMap: {[key: string]: any} ;\r\n\r\n  private static _checkForUpdates(): void {\r\n    if (!BaseGenerator._hasCheckedForUpdates) {\r\n      const update: UpdateNotifier.UpdateNotifier =\r\n        new UpdateNotifier.UpdateNotifier({ pkg: BaseGenerator.generatorPackageJson });\r\n\r\n      update.notify({\r\n        defer: false\r\n      } as any); /* tslint:disable-line:no-any */\r\n    }\r\n    BaseGenerator._hasCheckedForUpdates = true;\r\n  }\r\n\r\n  // tslint:disable:no-any\r\n\r\n  /**\r\n   * Lifecycle events, these are called in a specific order by the Yeoman\r\n   * generator, which is why they are listed here in order.\r\n   * http://yeoman.io/authoring/running-context.html\r\n   */\r\n\r\n  /** Your initialization methods (checking current project state, getting configs, etc) */\r\n  public abstract initializing(): Promise<any> | void;\r\n\r\n  /** Where you prompt users for options (where you'd call this.prompt()) */\r\n  public abstract prompting(): Promise<any> | void;\r\n\r\n  /** Saving configurations and configure the project (creating .editorconfig files and other metadata files) */\r\n  public abstract configuring(): Promise<any> | void;\r\n\r\n  /** Where you write the generator specific files (routes, controllers, etc) */\r\n  public writing(shouldCopy: boolean = true): Promise<any> | void {\r\n    // Update config to add the webpart entry.\r\n    this.configJson.save();\r\n\r\n    // Update package.json dependencies and trigger npm install if necessary.\r\n    this.packageJson.save();\r\n\r\n    // Update serve.json to add the new serve configuration.\r\n    this.serveJson.save();\r\n\r\n    // Update package-solution.json to add the new packaging configuration.\r\n    this.packageSolutionJson.save();\r\n\r\n    if (shouldCopy) {\r\n      this.copyTemplate(this.sourceRoot(), this.destinationRoot());\r\n    }\r\n  }\r\n\r\n  /** Where installation are run (npm, bower) */\r\n  public abstract install(): Promise<any> | void;\r\n\r\n  /** Called last, cleanup, say good bye, etc */\r\n  public abstract end(): Promise<any> | void;\r\n\r\n  // tslint:enable:no-any\r\n\r\n  protected constructor(args: string | string[], options: any) { /* tslint:disable-line:no-any */\r\n    // Always overwrite the conflict files, without any prompting.\r\n    super(args, (!(options.force = true)) || options );\r\n\r\n    this.context = {} as IContext;\r\n\r\n    // tslint:disable:no-string-literal\r\n    YeomanConfiguration.setStore(this['config'] as IYeomanConfigurationData);\r\n\r\n    BaseGenerator._checkForUpdates();\r\n\r\n    this.option('skip-install', {\r\n      type: Boolean,\r\n      description: 'Skip running package managers (NPM, etc) post scaffolding',\r\n      default: false\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  protected tryInstall(): boolean {\r\n    const shouldInstall: boolean = !this.options['skip-install'];\r\n    if (shouldInstall) {\r\n      this.npmInstall();\r\n    }\r\n    return shouldInstall;\r\n  }\r\n\r\n  protected copyTemplate(sourceDirectory: string, destinationDir: string): void {\r\n    Utils.filesIn(sourceDirectory).map(this._untokenizedCopier(sourceDirectory, destinationDir));\r\n  }\r\n\r\n  protected ensureDependencyGroup(group: DependencyGroups): void {\r\n    const dependencyList: { [key: string]: string } = this._getDependencies(group);\r\n\r\n    if (!this.packageJson.data.dependencies) {\r\n      this.packageJson.data.dependencies = {};\r\n    }\r\n\r\n    if (group === 'webpart' || group === 'extension') {\r\n      const firstPartyDependencies: PackageJson =\r\n        require(path.join(\r\n          __dirname,\r\n          'dependency',\r\n          group,\r\n          YeomanConfiguration.environment !== 'onprem' ? 'firstParty' : 'onPremFirstParty' + '.json')\r\n        );\r\n      const thirdPartyDependencies: PackageJson = require(path.join(__dirname, 'dependency', 'thirdParty.json'));\r\n\r\n      this.packageJson.merge(firstPartyDependencies);\r\n      this.packageJson.merge(thirdPartyDependencies);\r\n    }\r\n\r\n    Object.keys(dependencyList).forEach(name => {\r\n      this.packageJson.addDependency(name, dependencyList[name]);\r\n    });\r\n  }\r\n\r\n  private _getDependencies(group: DependencyGroups): { [key: string]: string } {\r\n    return (this._dependencyGroups[group] || {})['dependencies'] || {};\r\n  }\r\n\r\n  /* tslint:disable-next-line:no-any */\r\n  private get _dependencyGroups(): {[key: string]: any} {\r\n    if (!this._dependencyGroupMap) {\r\n      this._dependencyGroupMap = {};\r\n      this._dependencyGroupMap['react'] = require(path.join(__dirname, 'dependency',\r\n        YeomanConfiguration.environment !== 'onprem' ? 'react.json' : 'onPremReact.json'));\r\n      this._dependencyGroupMap['knockout'] = require(path.join(__dirname, 'dependency', 'knockout.json'));\r\n      this._dependencyGroupMap['applicationCustomizer'] = require(path.join(__dirname, 'dependency', 'applicationCustomizer.json')); // tslint:disable-line:max-line-length\r\n      this._dependencyGroupMap['fieldCustomizer'] = require(path.join(__dirname, 'dependency', 'fieldCustomizer.json'));\r\n      this._dependencyGroupMap['commandSet'] = require(path.join(__dirname, 'dependency', 'commandSet.json'));\r\n    }\r\n    return this._dependencyGroupMap;\r\n  }\r\n\r\n  private _untokenizedCopier(directory: string, destination: string): (filename: string) => void {\r\n    return (filename: string) => {\r\n      const sourceFile: string = path.join(directory, filename);\r\n\r\n      const destinationFile: string = path.join(\r\n        destination,\r\n        Utils.untokenize(filename, this.context)\r\n      );\r\n\r\n      this.fs.copyTpl(sourceFile, destinationFile, this.context);\r\n    };\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}