{"version":3,"sources":["common/ServeJsonManager.ts"],"names":[],"mappings":";;AACA,4BAA4B;AAO5B,+CAA4C;AAE5C,sBAA8B,SAAQ,yBAAuB;IAGpD,MAAM,CAAC,IAAI,CAChB,QAAgB,EAChB,EAAsB;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,IAAgB,CAAC;QACrB,IAAI,CAAC;YACH,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,2DAA2D;YAC3D,IAAI,GAAG,SAAS,CAAC;QACnB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,GAAG;gBACL,SAAS,EAAE,kEAAkE;gBAC7E,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,IAAI;aACZ,CAAC;QACJ,CAAC;QAED,gBAAgB,CAAC,SAAS,GAAG,IAAI,gBAAgB,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IAEM,MAAM,CAAC,KAAK;QACjB,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC;IACzC,CAAC;IAEM,MAAM,KAAK,QAAQ;QACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,gBAAgB,CAAC,IAAY,EAAE,aAA6C;QACjF,6CAA6C;QAC7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAAG;gBAC9B,OAAO,EAAE,aAAa;aACvB,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC;IACtD,CAAC;IAEM,gBAAgB;QACrB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;YACjB,WAAW,EAAE,kCAAkC;YAC/C,KAAK,EAAE,IAAI;YACX,GAAG,EAAE;gBACH,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,uDAAuD;aACnE;SACF,CAAC,CAAC;IACL,CAAC;CACF;AA1DD,4CA0DC","file":"common/ServeJsonManager.js","sourcesContent":["import * as yeoman from 'yeoman-generator';\r\nimport * as _ from 'lodash';\r\n\r\nimport {\r\n  ISpfxServe,\r\n  ISpfxServeSessionConfiguration\r\n} from '@microsoft/sp-build-core-tasks';\r\n\r\nimport { JsonManager } from './JsonManager';\r\n\r\nexport class ServeJsonManager extends JsonManager<ISpfxServe> {\r\n  private static _instance: ServeJsonManager;\r\n\r\n  public static load(\r\n    filepath: string,\r\n    fs: yeoman.MemFsEditor): void {\r\n      if (this._instance) {\r\n        throw new Error(`Cannot create a second instance of ServeJsonManager`);\r\n      }\r\n\r\n      let data: ISpfxServe;\r\n      try {\r\n        data = fs.readJSON(filepath);\r\n      } catch (error) {\r\n        // Bootstrap the serve.json file with the basic information\r\n        data = undefined;\r\n      }\r\n\r\n      if (!data) {\r\n        data = {\r\n          '$schema': 'https://dev.office.com/json-schemas/core-build/serve.schema.json',\r\n          port: 4321,\r\n          https: true\r\n        };\r\n      }\r\n\r\n      ServeJsonManager._instance = new ServeJsonManager(filepath, fs, data);\r\n  }\r\n\r\n  public static reset(): void {\r\n    ServeJsonManager._instance = undefined;\r\n  }\r\n\r\n  public static get instance(): ServeJsonManager {\r\n    return this._instance;\r\n  }\r\n\r\n  public addConfiguration(name: string, configuration: ISpfxServeSessionConfiguration): void  {\r\n    // The first configuration is the default one\r\n    if (!this.data.serveConfigurations) {\r\n      this.data.serveConfigurations = {\r\n        default: configuration\r\n      };\r\n    }\r\n\r\n    this.data.serveConfigurations[name] = configuration;\r\n  }\r\n\r\n  public setUpForWebParts(): void {\r\n    _.merge(this.data, {\r\n      initialPage: 'https://localhost:5432/workbench',\r\n      https: true,\r\n      api: {\r\n        port: 5432,\r\n        entryPath: 'node_modules/@microsoft/sp-webpart-workbench/lib/api/'\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}