{"version":3,"sources":["common/utilities.ts"],"names":[],"mappings":"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","file":"common/utilities.js","sourcesContent":["import * as chalk from 'chalk';\r\nimport * as fs from 'fs';\r\nimport * as lodash from 'lodash';\r\nimport * as path from 'path';\r\nimport * as uuid from 'uuid';\r\nimport yeoman = require('yeoman-generator');\r\n\r\nimport {\r\n  BaseGenerator,\r\n  IBaseOptions\r\n} from './BaseGenerator';\r\n\r\nexport function titleCase(str: string): string {\r\n  str = lodash.camelCase(str);\r\n  return lodash.upperFirst(str);\r\n}\r\n\r\nexport function untokenize(str: string, props: Object): string {\r\n  for (const prop in props) {\r\n    if (props.hasOwnProperty(prop) && typeof props[prop] === 'string') {\r\n      str = str.replace(new RegExp(`{${ prop }}`, 'g'), props[prop]);\r\n    }\r\n  }\r\n\r\n  // Convert file name prefix with '_' to '.'\r\n  const basename: string = path.basename(str);\r\n  if (basename[0] === '_') {\r\n    const filename: string = '.' + basename.substr(1);\r\n    const dirname: string = path.dirname(str);\r\n    str = path.join(dirname, filename);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function filesIn(...args: string[]): string[] {\r\n  const inputPath: string = path.join.apply(undefined, args);\r\n  const files: string[] = [];\r\n\r\n  function traversePath(innerPath: string): void {\r\n    const subPaths: string[] = fs.readdirSync(innerPath)\r\n      .filter(filename => filename !== '.' && filename !== '..')\r\n      .map(filename => path.join(innerPath, filename));\r\n\r\n    const subFiles: string[] = subPaths\r\n      .filter(pathname => fs.statSync(pathname).isFile())\r\n      .map(pathname => path.relative(inputPath, pathname));\r\n\r\n    const subFolders: string[] = subPaths\r\n      .filter(pathname => fs.statSync(pathname).isDirectory());\r\n\r\n    subFolders.forEach(traversePath);\r\n    files.push.apply(files, subFiles);\r\n  }\r\n\r\n  traversePath(inputPath);\r\n\r\n  return files;\r\n}\r\n\r\nexport function checkSolutionFolder(generator: yeoman, solutionName: string): Promise<string> {\r\n  if (!solutionName) {\r\n    generator.log(chalk.red('!!! Warning !!!'));\r\n    return generator.prompt([\r\n      {\r\n        type: 'confirm',\r\n        name: 'continue',\r\n        default: undefined,\r\n        message: 'You are not running under solution folder. Continue?'\r\n      }\r\n    ]).then((answers: {\r\n      continue: boolean\r\n    }) => {\r\n      if (answers.continue) {\r\n        return solutionName; // resolve with the solution name\r\n      } else {\r\n        throw generator.log(chalk.red('Bye!'));\r\n      }\r\n    });\r\n  } else {\r\n    return Promise.resolve(solutionName);\r\n  }\r\n}\r\n\r\nexport function generateGuid(): string {\r\n  return uuid.v4();\r\n}\r\n\r\n// tslint:disable-next-line\r\nexport function compose(generator: string, base: BaseGenerator<any, any>, options: IBaseOptions): void {\r\n  base.composeWith(`@microsoft/sharepoint:${generator}`, options);\r\n}"],"sourceRoot":"..\\..\\src"}